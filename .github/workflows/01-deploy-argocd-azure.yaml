name: 01-Deploy ArgoCD (Azure)

on:
  workflow_dispatch:

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout and actions/pull

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_USE_OIDC: true
  APP_NAME: AATT_APP_NAME # This value was modified by the initial-setup python script

jobs:
  deploy-argocd:
    runs-on: ubuntu-latest
    environment: TEST
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup K8s environment
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account set --subscription 82459e9c-fe0b-4dc7-bcf1-29fac07afa4d
            az aks get-credentials --resource-group automate-all-the-things-andrei --name automation-andrei --overwrite-existing
            kubelogin convert-kubeconfig -l azurecli

      # - name: Configure kubeconfig
      #   run: aws eks --region $AWS_REGION update-kubeconfig --name $APP_NAME-cluster

      - name: Deploy ArgoCD
        # env:
        #   KUBECONFIG: "/root/.kube/config"
        run: helm install argocd -n argocd helm/argo-cd --values helm/argo-cd/values-custom.yaml --dependency-update --create-namespace

      - name: Save ArgoCD credential
        run: |
          while [[ $(kubectl get ingress -n argocd $(kubectl get ingress -n argocd | awk 'NR>1{print $1}') -o 'jsonpath={.status.loadBalancer.ingress[0].hostname}') == '' ]]; do
            echo "Ingress is not ready. Checking again in 5 seconds..."
            sleep 5
          done
          kubectl get ingress -n argocd $(kubectl get ingress -n argocd | awk 'NR>1{print $1}') -o=jsonpath="{'http://'}{.status.loadBalancer.ingress[].hostname}{'\n'}" > argocd-access.txt
          echo "admin" >> argocd-access.txt
          while [[ $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}") == '' ]]; do
            echo "Secret is not ready. Checking again in 5 seconds..."
            sleep 5
          done
          echo $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d) >> argocd-access.txt

      - name: Publish ArgoCD credentials
        uses: actions/upload-artifact@v4
        with:
          name: argocd-access
          path: argocd-access.txt

      - name: Create ArgoCD application resources
        run: |
          for env in dev stage prod; do
            kubectl create -n argocd -f "argo-cd/backend/application-${env}.yaml"
            kubectl create -n argocd -f "argo-cd/frontend/application-${env}.yaml"
          done